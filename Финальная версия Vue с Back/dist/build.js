(()=>{"use strict";const t={components:{cartItem:e},props:["cartItems"],data:()=>({isVisibleCart:!1}),template:'<div>\n                    <button class="btn-cart" type="button"><img src="img/basket.png" alt="Корзина" width="30" height="30" @click="isVisibleCart=!isVisibleCart"></button>\n                    <div class="cartBlock" v-if="isVisibleCart">\n                        <p v-if="!cartItems.length">Корзина пуста</p>\n                        <cartItem v-for="item of cartItems" :key="item.id_product" :cart-item="item"></cartItem>\n                    </div>\n                </div>'},e={props:["cartItem"],template:'<div class="cart-item">\n                    <img class="cart-image" :src="cartItem.cartImg" alt="Some img">\n                    <h3 class="cart-title">{{cartItem.product_name}}</h3>\n                    <p class="cart-price">{{cartItem.price*cartItem.quantity}} $</p>\n                    <p class="cart-quantity">{{cartItem.quantity}} шт</p>\n                    <button class="del-btn" @click="$root.removeProduct(cartItem)"></button>\n                </div>'},r={components:{cartItem:e},cart:t},s={components:{product:c},props:["products"],template:'<div class="products">\n                    <product v-for="item of products" :key="item.id_product" :product="item"></product>\n                </div>'},c={props:["product"],template:'<div class="product-item">\n                    <a :href="product.watchImg" target="_blank"><img class="product-image" :src="product.img" alt="Some img"></a>\n                    <h3 class="product-title">{{product.product_name}}</h3>\n                    <p class="product-price">{{product.price}} $</p>\n                    <button class="buy-btn" @click="$root.addProduct(product)">Купить</button>\n                </div>'},o={components:{product:c},products:s},a={error:{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'<div class="error-block" v-if="isVisible">\n        <p class="error-msg">\n        <button class="close-btn" @click="text=\'\'">&times;</button>\n        {{ text }}\n</p>\n</div>'}},i=(new Vue({el:"#app",data:{products:[],filtered:[],cartItems:[],searchLine:""},components:{cart:n,products:d,search:u,error:m},methods:{getJson(t){return fetch(t).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},postJson(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},putJson(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},addProduct(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));if(e)this.putJson("/api/cart/"+e.id_product,{quantity:1}).then((t=>{1===t.result&&e.quantity++}));else{const e=Object.assign({quantity:1},t);this.postJson("/api/cart",e).then((t=>{1===t.result&&this.cartItems.push(e)}))}},removeProduct(t){t.quantity>1?t.quantity--:this.$data.cartItems.splice(this.cartItems.indexOf(t),1)},filterGoods(t){const e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.product_name)))}},mounted(){this.getJson("/api/products").then((t=>{for(let e of t)this.$data.products.push(e),this.$data.filtered.push(e)})),this.getJson("/api/cart").then((t=>{for(let e of t)this.$data.cartItems.push(e)}))}}),r.components.cartItem),n=r.cart,p=o.components.product,d=o.products,u={data:()=>({userSearch:""}),template:'<form action="#" class="searchForm" @submit.prevent="$root.filterGoods(userSearch)">\n                    <input class="input-search" type="text" v-model="userSearch">\n                    <button class="btn-search" type="button"></button>\n                </form>'},m=a.error,l={cartItem:i,cart:n,product:p,products:d,search:u,error:m};l.cartItem,l.cart,l.product,l.products,l.search,l.error})();